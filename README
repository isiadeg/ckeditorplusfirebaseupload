This repo contains files that enable you to set up ckeditor "a WYSIWYG editor" into your angular application 
along with firebase storage  upload features.

This repo has a component already set up for ckeditor and firebase upload. The ckeditor can do image upload.
You can edit where to upload in the upload.ts (that is , maybe another firebase storage location). 
Just place USER folder  of this repo in the app folder of your app.
Place the build folder in the src folder of your app
Place the UPLOAD.TS in the app folder of your app
register the component in your app module by importing and adding it to bootstrap array.
USE cmd to cd into the root of your angular app and do 
  "npm install firebase"
  Don't import any firebase in the app module. The firebase import you need is already in the user.component.ts
Then install ckeditor5-angular in the project by doing "npm install --save @ckeditor/ckeditor5-angular"
Then import CKEditorModule in the app module and then add it to the imports array like below..
.....
import { CKEditorModule } from '@ckeditor/ckeditor5-angular;
......
@NgModule( {
    imports: [
        CKEditorModule,
        // ...
    ],
    // ...
} )



Also in the app root folder, you will see a tsconfig.json, add "allowJs":true to the angularcompileroptions like this ..
....
"angularCompilerOptions": {
   .....
    "allowJs": true
  }
  
  
    NOTE THAT THE COMPONENT ALREADY HAS IMPORTED Decoupled editor like this
    import * as DecoupledEditor from '../../build/ckeditor';
    You can change this code or the file path to suit your app needs
    
    
    
    
    
    
    
    
    
    
    

FOR ANOTHER addition of dependency package in the ckeditor

--- Do a custom build of ckeditor by 
    download or clone the isiadeg/ckeditor from github
    unzip it if it is zipped
    open cmd, cd into the root folder and do npm install
    
    Then, you can add missing dependencies (i.e. packages you want to add to your build). The easiest way to do so is by typing:

      npm install --save-dev <package-name>

      This will install the package and add it to package.json.
      
      You can also edit package.json manually. Keep in mind however, that all packages (excluding @ckeditor/ckeditor5-dev-*) must have the same version as the base editor package.

*****************************
Due to the non-deterministic way how npm installs packages, it is recommended to run rm -rf node_modules && npm install when in doubt. 
This will prevent some packages from getting installed more than once in node_modules/ (which might lead to broken builds).
**************************

   After go to the folder of the ckeditor package type that you want.
   Inside the folder, go to the src/ckeditor.js
   open the ckeditor.js
   add the newly installed dependency to the ckeditor.js by
   1) importing it 
   2) add it to plugin list
   Look how custom plugin is added in the following example
  ************************************ 
 ..................
import CustomPlugin from 'ckeditor5-custom-package/src/customplugin';
import OtherCustomPlugin from '../relative/path/to/some/othercustomplugin';

export default class ClassicEditor extends ClassicEditorBase {}

// Plugins to include in the build.
ClassicEditor.builtinPlugins = [
 .............
    CustomPlugin,
    OtherCustomPlugin
];

ClassicEditor.defaultConfig = {
    toolbar: [ 'heading', '|', 'bold', 'italic', 'custombutton' ],

    // This value must be kept in sync with the language defined in webpack.config.js.
    language: 'en'
};
   
********************

Then use command prompt to cd  to the beginning folder/root folder of the TYPE of ckeditor that you choose
install webpack globally
after that, do "webpack --mode production"
after that copy the build folder that is in the folder of the ckeditor type that you choose
paste this build folder in the src folder of your angular app
Then install ckeditor5-angular in the project by doing "npm install --save @ckeditor/ckeditor5-angular"
Then import it in the app module and then add it to the imports array like below..
.....
import { CKEditorModule } from '@ckeditor/ckeditor5-angular;
......
@NgModule( {
    imports: [
        CKEditorModule,
        // ...
    ],
    // ...
} )



Also in the app root folder, you will see a tsconfig.json, add "allowJs":true to the angularcompileroptions like this ..
....
"angularCompilerOptions": {
   .....
    "allowJs": true
  }
  
    NOTE THAT THE COMPONENT ALREADY HAS IMPORTED Decoupled editor like this
    import * as DecoupledEditor from '../../build/ckeditor';
    You can change this code or the file path to suit your app needs
    
    
    
